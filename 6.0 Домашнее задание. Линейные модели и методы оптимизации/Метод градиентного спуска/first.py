# Подключаем необходимые библиотеки

import time
import numpy as np
import matplotlib.pyplot as plt

# определяем функции

# основная функция
def f(x):
    return x*x - 5*x + 5

# проивзодвная от f(x)
def df(x):
    return 2*x - 5

# Определим необходимые параметры алгоритма

N = 20       # число итераций
xx = 0       # начальное значение
lmd = 0.3   # шаг сходимости
x_plt = np.arange(0, 5.0, 0.1)   # диапазон изменения аргумента
f_plt = [f(x) for x in x_plt]    # формируем функцию параболы для визуализации процесса

# Работа с графиком

plt.ion()                   # включение режима интерактивного отображения графика
fig, ax = plt.subplots()    # создание окна и осей для графика
ax.grid(True)               # отображение сетки на графике


# Отображение графика

ax.plot(x_plt, f_plt)                     # отображение параболы
point = ax.scatter(xx, f(xx), c='red')    # отображение точки красным цветом

# Запускаем наш алгоритм

mn = 100    # ограничивающее значения подбора шага
for i in range(N):
    lmd = 1 / min(i + 1, mn)    #подбор шага
    xx = xx - lmd*np.sign(df(xx)) # изменение аргумента на текущей итерации

    point.set_offsets([xx, f(xx)]) # отображение нового положения точки

    # перерисовка графика с задержкой 20 мс
    fig.canvas.draw()
    fig.canvas.flush_events()
    time.sleep(0.02)

# Выключение интерактивного режима отображения графиков

plt.ioff()
print(xx)
ax.scatter(xx, f(xx), c='blue')
plt.show()

